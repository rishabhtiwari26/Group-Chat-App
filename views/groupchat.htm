<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Group Chat</title>
<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
  }

  .container {
    max-width: 800px;
    margin: 20px auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    position: relative;
  }

  h1 {
    text-align: center;
    color: #333;
  }

  #add-member-form {
    display: none;
    position: absolute;
    top: 60px;
    right: 20px;
    padding: 10px;
    background-color: #f9f9f9;
    border: 1px solid #ccc;
    border-radius: 5px;
  }

  #add-member-input {
    width: 200px;
    padding: 10px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    outline: none;
  }

  #add-member-button {
    padding: 10px 20px;
    background-color: #28a745;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
  }

  #add-member-button:hover {
    background-color: #218838;
  }

  #chat-box {
    border: 1px solid #ccc;
    height: 300px;
    overflow-y: scroll;
    padding: 10px;
    margin-bottom: 20px;
    background-color: #f9f9f9;
    border-radius: 5px;
  }

  #message-input {
    width: calc(100% - 70px);
    padding: 10px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    outline: none;
  }

  #send-button {
    padding: 10px 20px;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
  }

  #send-button:hover {
    background-color: #0056b3;
  }
</style>
</head>
<body>
<div class="container">
  <h1>Group Chat</h1>
  <button id="add-member-button">Add Member</button>
  <form id="add-member-form">
    <input type="email" id="add-member-input" placeholder="Enter Email ID">
    <button type="submit">Add</button>
  </form>
  <div id="chat-box"></div>
  <form id="message-form">
    <input type="text" id="message-input" placeholder="Type your message...">
    <button type="submit" id="send-button">Send</button>
  </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
<script>
  const chatBox = document.getElementById('chat-box');
  const messageInput = document.getElementById('message-input');
  const sendButton = document.getElementById('send-button');
  const messageForm = document.getElementById('message-form');
  const addMemberForm = document.getElementById('add-member-form');
  const addMemberInput = document.getElementById('add-member-input');
  const addMemberButton = document.getElementById('add-member-button');

  function addMessage(message, sender, isCurrentUser) {
    const newMessage = document.createElement('div');
    const isAtBottom = chatBox.scrollHeight - chatBox.clientHeight <= chatBox.scrollTop + 1;
    if (isCurrentUser) {
      newMessage.textContent = `You: ${message}`;
    } else {
      newMessage.textContent = `${sender}: ${message}`;
    }
    chatBox.appendChild(newMessage);
    if (isAtBottom) {
      chatBox.scrollTop = chatBox.scrollHeight;
    }

  }
  function sendMessage(message) {
    const token = localStorage.getItem('token')
    let obj ={
        chat:message,
    }
    const groupId=localStorage.getItem('gId')
    axios.post('http://localhost:3000/chat/postchat',obj,{headers:{'Authorization':token,'gId':groupId}})
        .then(res=>{
            console.log(res,'gchat sendMessage(message)')
        }).catch(e=>{
            console.log(e)
        })
    console.log('Sent message:', message);
  }
  async function receiveMessage(lastChatId) {
      const token = localStorage.getItem('token');
      const groupId=localStorage.getItem('gId')
      const userEmail=localStorage.getItem('email')

      let url = 'http://localhost:3000/chat/getchats?lastChatId=' + lastChatId;
      const res= await axios.get(url, { headers: { 'Authorization': token,'gId':groupId } })
      const storedChats = retrieveChats();
      const newChats = res.data;
      const allChats = storedChats.concat(newChats);
      const recentChats=allChats.slice(-10)
      if (newChats.length>0){
        storeChats(recentChats);
        newChats.forEach(chat=>{
          const isCurrentUser = chat.userDetail.email === userEmail;
          addMessage(chat.chat, chat.userDetail.name, isCurrentUser);
        })
      }
      
  }
  
  
  addMemberButton.addEventListener('click', function() {
    addMemberForm.style.display = addMemberForm.style.display === 'none' ? 'block' : 'none';
  });
  
  async function addMember(email) {
    const token = localStorage.getItem('token')
    const groupId=localStorage.getItem('gId')
    
    const memberStatus=await axios.post('http://localhost:3000/user/add-member',{email},{ headers: { 'Authorization': token,'gId':groupId } })
    console.log(memberStatus)
  }
  
  function initial() {
    const storedChats = retrieveChats();
    const userEmail = localStorage.getItem('email');
    storedChats.forEach(chat => {
      const isCurrentUser = chat.userDetail.email === userEmail;
      addMessage(chat.chat, chat.userDetail.name, isCurrentUser);
  })
  }
  function storeChats(chats) {
    const recentChats = chats.slice(-10);
    localStorage.setItem('chats', JSON.stringify(recentChats));
  }
  
  function retrieveChats() {
    const storedChats = localStorage.getItem('chats');
    return storedChats !== null ? JSON.parse(storedChats) : [];
    
  }
  messageForm.addEventListener('submit', function(event) {
    event.preventDefault();
    const message = messageInput.value.trim();
    if (message !== '') {
      //addMessage(message, 'You', true);
      sendMessage(message);
      messageInput.value = ''; // Clear the input field
    }
  });
  addMemberForm.addEventListener('submit', function(event) {
    event.preventDefault();
    const email = addMemberInput.value.trim();
    if (email !== '') {
      
      console.log('Adding member with email:', email);
      addMember(email);
      addMemberInput.value = '';
      addMemberForm.style.display = 'none'; 
    }
  });
  
      
  window.onload = () => {
    initial()
};
setInterval(() => {
  const storedChats = retrieveChats();
  const lastChatId = storedChats.length > 0 ? storedChats[storedChats.length - 1].id : 0;
  receiveMessage(lastChatId);
}, 2000);
    </script>
  </body>
  </html>
  